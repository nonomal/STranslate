<UserControl x:Class="STranslate.Views.Preference.Translator.TranslatorGeminiPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:common="clr-namespace:STranslate.Style.Commons;assembly=STranslate.Style"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:model="clr-namespace:STranslate.Model;assembly=STranslate.Model"
             xmlns:vm="clr-namespace:STranslate.ViewModels.Preference.Translator"
             d:DataContext="{d:DesignInstance Type=vm:TranslatorGemini}"
             d:DesignHeight="450"
             d:DesignWidth="800"
             Background="Transparent"
             FontSize="{DynamicResource FontSize_Content}"
             mc:Ignorable="d">
    <UserControl.Resources>
        <common:BindingProxy x:Key="userdefineprompt" Data="{Binding UserDefinePrompts}" />

        <ItemsPanelTemplate x:Key="prompttemplate">
            <WrapPanel Orientation="Horizontal" />
        </ItemsPanelTemplate>
        <DataTemplate DataType="{x:Type model:UserDefinePrompt}">
            <Border Style="{DynamicResource BorderPromptStyle}">
                <StackPanel Orientation="Horizontal">
                    <Button
                        Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext.SelectedPromptCommand}"
                        Content="{Binding Name}"
                        Style="{DynamicResource lbtn}">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource MultiValue2ListConverter}">
                                <Binding Path="." />
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>
                    <Separator Style="{DynamicResource verSep}" />
                    <Button
                        Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext.UpdatePromptCommand}"
                        CommandParameter="{Binding Path=.}"
                        Content="&#xe61b;"
                        FontFamily="{DynamicResource IconFont}"
                        FontSize="{DynamicResource FontSize_Identify}"
                        Style="{DynamicResource btn}" />
                    <Separator Style="{DynamicResource verSep}" />
                    <Button
                        Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext.DeletePromptCommand}"
                        CommandParameter="{Binding Path=.}"
                        Content="&#xe74b;"
                        FontFamily="{DynamicResource IconFont}"
                        FontSize="{DynamicResource FontSize_Prompt}"
                        Style="{DynamicResource rbtn}" />
                </StackPanel>
            </Border>
        </DataTemplate>
    </UserControl.Resources>
    <Border Padding="10,20"
            BorderBrush="{DynamicResource BorderBrushColor}"
            BorderThickness="1"
            CornerRadius="4">
        <ScrollViewer>
            <StackPanel>
                <Grid Margin="0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="名称: " />

                    <common:PlaceholderTextBox Grid.Column="1"
                                               MinWidth="160"
                                               HorizontalAlignment="Left"
                                               Placeholder="Gemini"
                                               Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </Grid>

                <Grid Margin="0,10" Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="图标: " />

                    <ComboBox Grid.Column="1"
                              HorizontalAlignment="Left"
                              BorderThickness="1"
                              ItemsSource="{Binding Icons}"
                              SelectedValue="{Binding Icon}"
                              SelectedValuePath="Key"
                              Style="{DynamicResource IconComboBoxStyle}" />
                </Grid>

                <Grid Margin="0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="URL: " />

                    <common:PlaceholderTextBox Grid.Column="1"
                                               MinWidth="206"
                                               HorizontalAlignment="Left"
                                               Placeholder="https://generativelanguage.googleapis.com"
                                               Text="{Binding Url, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </Grid>

                <Grid Margin="0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="模型: " />

                    <common:PlaceholderTextBox Grid.Column="1"
                                               MinWidth="206"
                                               HorizontalAlignment="Left"
                                               Placeholder="gemini-pro"
                                               Text="{Binding Model, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </Grid>

                <Grid Margin="0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="38" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Key: " />

                    <common:PlaceholderTextBox Grid.Column="1"
                                               MinWidth="160"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Placeholder="API Key"
                                               Text="{Binding AppKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               Visibility="{Binding KeyHide, Converter={StaticResource BooleanToVisibilityReverseConverter}}" />
                    <PasswordBox Grid.Column="1"
                                 MinWidth="160"
                                 HorizontalAlignment="Left"
                                 common:BoundPasswordBox.Attach="True"
                                 common:BoundPasswordBox.Password="{Binding AppKey, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                 Tag="API Key"
                                 ToolTip="{Binding AppKey}"
                                 Visibility="{Binding KeyHide, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <Button Grid.Column="2"
                            Command="{Binding ShowEncryptInfoCommand}"
                            Content="{Binding KeyHide, Converter={StaticResource BooleanToContentConverter}, ConverterParameter=ICON}"
                            Style="{DynamicResource ButtonIconStyle}" />
                </Grid>

                <Grid Margin="0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="自动执行: " ToolTip="执行翻译时是否自动翻译，否则需要手动点击才能进行翻译" />

                    <ToggleButton Grid.Column="1" HorizontalAlignment="Left" IsChecked="{Binding AutoExecute}" />
                </Grid>

                <Grid Margin="0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="连通测试: " />

                    <Button Grid.Column="1"
                            MinWidth="80"
                            HorizontalAlignment="Left"
                            Command="{Binding TestCommand}"
                            Content="验证"
                            Visibility="{Binding IsTesting, Converter={StaticResource BooleanToVisibilityReverseConverter}}" />
                    <Button Grid.Column="1"
                            MinWidth="80"
                            HorizontalAlignment="Left"
                            Command="{Binding TestCancelCommand}"
                            Content="取消"
                            Visibility="{Binding IsTesting, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>

                <Grid Margin="0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock VerticalAlignment="Top" Text="Prompts: " />
                    <TextBlock Grid.Column="1"
                               FontSize="{DynamicResource FontSize_Identify}"
                               Text="通过自定义Prompt自定义Gemini行为, $source $target $content 将会被替换为 原始语言 目标语言 待翻译文本。"
                               TextWrapping="Wrap" />
                </Grid>

                <!-- // Preset Prompts // -->
                <Border Margin="0,10" Style="{DynamicResource BorderStyle}">
                    <ListBox Background="Transparent"
                             BorderThickness="0"
                             ItemsPanel="{StaticResource prompttemplate}"
                             PreviewMouseWheel="ListBox_PreviewMouseWheel"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.ItemsSource>
                            <CompositeCollection>
                                <CollectionContainer
                                    Collection="{Binding Source={StaticResource userdefineprompt}, Path=Data}" />
                                <ListBoxItem>
                                    <Button Width="40"
                                            Command="{Binding AddPromptCommand}"
                                            Content="&#xe710;"
                                            FontWeight="Bold"
                                            Style="{DynamicResource ButtonIconStyle}" />
                                </ListBoxItem>
                            </CompositeCollection>
                        </ListBox.ItemsSource>
                    </ListBox>
                </Border>

                <Grid Margin="0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Other: " />
                    <TextBlock Grid.Column="1" Margin="10,0" ToolTip="在浏览器中打开">
                        <Hyperlink Click="Hyperlink_Click">进入官网</Hyperlink>
                    </TextBlock>
                </Grid>
            </StackPanel>
        </ScrollViewer>
    </Border>
</UserControl>