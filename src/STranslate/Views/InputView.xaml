<UserControl x:Class="STranslate.Views.InputView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:common="clr-namespace:STranslate.Style.Commons;assembly=STranslate.Style"
             xmlns:control="clr-namespace:STranslate.Style.Controls;assembly=STranslate.Style"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:STranslate.ViewModels"
             xmlns:model="clr-namespace:STranslate.Model;assembly=STranslate.Model"
             d:DataContext="{d:DesignInstance Type=vm:InputViewModel}"
             d:DesignHeight="450"
             d:DesignWidth="800"
             Background="Transparent"
             mc:Ignorable="d">
    <UserControl.Resources>
        <common:BindingProxy x:Key="BindingProxy" Data="{x:Reference InputTB}" />
        <common:BindingProxy x:Key="InputVm" Data="{Binding}" />
    </UserControl.Resources>

    <!-- // 输入框 // -->
    <Border Style="{DynamicResource BorderInOutputStyle}">
        <Grid>
            <common:PlaceholderTextBox x:Name="InputTB"
                                       Placeholder="{Binding Placeholder}"
                                       PreviewMouseWheel="InputTB_PreviewMouseWheel"
                                       Style="{DynamicResource TextBoxInputStyle}"
                                       Text="{Binding InputContent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <common:PlaceholderTextBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding TranslateCommand}" />
                    <KeyBinding Key="Enter"
                                Command="{Binding TranslateCommand}"
                                CommandParameter="True"
                                Modifiers="Ctrl" />
                </common:PlaceholderTextBox.InputBindings>

                <!-- // 右键菜单 // -->
                <common:PlaceholderTextBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{Binding TbSelectAllCommand}"
                                  CommandParameter="{Binding Source={StaticResource BindingProxy}, Path=Data, Mode=OneWay}"
                                  Header="全选"
                                  Icon="&#xe658;" />
                        <Separator Margin="0,2" Style="{DynamicResource SeparatorStyle}" />
                        <MenuItem Command="{Binding TbCopyCommand}"
                                  CommandParameter="{Binding Source={StaticResource BindingProxy}, Path=Data, Mode=OneWay}"
                                  Header="复制"
                                  Icon="&#xe692;" />
                        <MenuItem Command="{Binding TbPasteCommand}"
                                  CommandParameter="{Binding Source={StaticResource BindingProxy}, Path=Data, Mode=OneWay}"
                                  Header="粘贴"
                                  Icon="&#xe652;" />
                        <Separator Margin="0,2" Style="{DynamicResource SeparatorStyle}" />
                        <MenuItem Command="{Binding TbClearCommand}"
                                  CommandParameter="{Binding Source={StaticResource BindingProxy}, Path=Data, Mode=OneWay}"
                                  Header="清空"
                                  Icon="&#xe6cb;" />
                    </ContextMenu>
                </common:PlaceholderTextBox.ContextMenu>
            </common:PlaceholderTextBox>
            <StackPanel Margin="10,5" VerticalAlignment="Bottom" Orientation="Horizontal">
                <!-- TTS -->
                <Button Command="{Binding TTSCommand}"
                        CommandParameter="{Binding InputContent}"
                        Content="&#xe610;"
                        Style="{DynamicResource ButtonCopyIconStyle}"
                        ToolTip="TTS"
                        Visibility="{Binding InputContent, Converter={StaticResource VisibilityConverter}}" />
                <Button Command="{Binding CopyContentCommand}"
                        CommandParameter="{Binding InputContent}"
                        Content="&#xe692;"
                        Style="{DynamicResource ButtonCopyIconStyle}"
                        ToolTip="复制输入内容"
                        Visibility="{Binding InputContent, Converter={StaticResource VisibilityConverter}}" />
                <Button Content="&#xe6b2;"
                        FontWeight="Bold"
                        Style="{DynamicResource ButtonCopyIconStyle}"
                        ToolTip="移除换行"
                        Visibility="{Binding InputContent, Converter={StaticResource VisibilityConverter}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding RemoveLineBreaksCommand}"
                                                   CommandParameter="{Binding ElementName=InputTB}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Command="{Binding RemoveSpaceCommand}"
                        CommandParameter="{Binding ElementName=InputTB}"
                        Content="&#xe6ab;"
                        FontSize="20"
                        FontWeight="Bold"
                        Style="{DynamicResource ButtonCopyIconStyle}"
                        ToolTip="移除空格"
                        Visibility="{Binding InputContent, Converter={StaticResource VisibilityConverter}}" />
                <Border Style="{DynamicResource LanguageMarkBorderStyle}"
                        Visibility="{Binding IdentifyLanguage, Converter={StaticResource VisibilityConverter}}">
                    <StackPanel Margin="5,2" Orientation="Horizontal">
                        <TextBlock Style="{DynamicResource LanguageMarkTextBlockStyle}" Text="识别为 " />
                        <TextBlock FontSize="{DynamicResource FontSize_Identify}"
                                   Visibility="Collapsed"
                                   Foreground="{DynamicResource ThemeAccentColor}" Text="{Binding IdentifyLanguage}" />
                        <ToggleButton Name="IdentifyTb"
                                      FontFamily="{DynamicResource UserFont}"
                                      FontSize="{DynamicResource FontSize_Identify}"
                                      Foreground="{DynamicResource ThemeAccentColor}"
                                      Content="{Binding IdentifyLanguage}"
                                      Cursor="Hand"
                                      Background="Transparent"
                                      Height="20"
                                      Margin="0"
                                      Style="{DynamicResource ToggleButtonIconStyle}" />
                        <Popup Name="IdentifyPopup"
                               IsOpen="{Binding ElementName=IdentifyTb, Path=IsChecked}"
                               StaysOpen="False"
                               MinWidth="40"
                               MinHeight="30"
                               AllowsTransparency="True"
                               PopupAnimation="Slide"
                               PlacementTarget="{Binding ElementName=IdentifyTb}"
                               Placement="Bottom">
                            <Border Style="{DynamicResource BorderStyle}">
                                <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                              MaxHeight="400">
                                    <ListBox Name="IdentifyLb"
                                             Background="Transparent"
                                             BorderThickness="0"
                                             PreviewMouseWheel="ListBox_PreviewMouseWheel"
                                             ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                        <ListBox.ItemsSource>
                                            <MultiBinding Converter="{StaticResource MultiLangFilterConverter}">
                                                <Binding Source="{common:Enumeration {x:Type model:LangEnum}}" />
                                                <Binding Path="OftenUsedLang" />
                                            </MultiBinding>
                                        </ListBox.ItemsSource>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type model:LangEnum}">
                                                <Border x:Name="IdentifyBorder"
                                                        Margin="3"
                                                        Background="{DynamicResource BorderBackground}"
                                                        BorderBrush="{x:Null}"
                                                        CornerRadius="5">
                                                    <TextBlock HorizontalAlignment="Left"
                                                               Margin="3 5"
                                                               FontSize="{DynamicResource FontSize_Identify}"
                                                               Text="{Binding Description}"
                                                               TextTrimming="CharacterEllipsis" />
                                                </Border>
                                                <DataTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="IdentifyBorder"
                                                                Property="Background"
                                                                Value="{DynamicResource BtnMouseOverBackground}" />
                                                    </Trigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                <i:InvokeCommandAction
                                                    Command="{Binding Source={StaticResource InputVm}, Path=Data.SelectedLanguageCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding
                                                            Converter="{StaticResource MultiValue2ListConverter}">
                                                            <Binding ElementName="IdentifyLb" Path="SelectedItem" />
                                                            <Binding ElementName="IdentifyTb" />
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ListBox>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </StackPanel>
                </Border>
            </StackPanel>

            <control:LoadingUC Margin="10,6,0,0" IsAnimationPlaying="{Binding NotifyIconVM.IsScreenshotExecuting}"
                               Visibility="{Binding NotifyIconVM.IsScreenshotExecuting, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </Grid>
    </Border>
</UserControl>