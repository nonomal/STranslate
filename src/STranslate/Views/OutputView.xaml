<UserControl x:Class="STranslate.Views.OutputView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:common="clr-namespace:STranslate.Style.Commons;assembly=STranslate.Style"
             xmlns:control="clr-namespace:STranslate.Style.Controls;assembly=STranslate.Style"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:model="clr-namespace:STranslate.Model;assembly=STranslate.Model"
             xmlns:vm="clr-namespace:STranslate.ViewModels"
             xmlns:xf="clr-namespace:XamlFlair;assembly=XamlFlair.WPF"
             d:DataContext="{d:DesignInstance Type=vm:OutputViewModel}"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <UserControl.Resources>
        <common:BindingProxy x:Key="OutputVm" Data="{Binding}" />
        <Storyboard x:Key="FadeInStoryboard">
            <DoubleAnimation Storyboard.TargetName="HeaderCopySP"
                             Storyboard.TargetProperty="Opacity"
                             To="1"
                             Duration="0:0:1" />
        </Storyboard>
        <Storyboard x:Key="FadeOutStoryboard">
            <DoubleAnimation Storyboard.TargetName="HeaderCopySP"
                             Storyboard.TargetProperty="Opacity"
                             To="0"
                             Duration="0:0:1" />
        </Storyboard>
    </UserControl.Resources>
    <StackPanel>
        <ListBox dd:DragDrop.DropHandler="{Binding}"
                 dd:DragDrop.IsDragSource="True"
                 dd:DragDrop.IsDropTarget="True"
                 dd:DragDrop.UseDefaultDragAdorner="True"
                 Background="Transparent"
                 BorderThickness="0"
                 ItemsSource="{Binding Translators}"
                 PreviewMouseWheel="ListBox_PreviewMouseWheel"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <!-- 宽度需要绑定到StackPanel上，而非ListBox上 -->
                    <Border
                        Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}, Path=Width}"
                        xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeInAndGrow},
                                                               Delay=10,
                                                               TransformOn=Render}"
                        Style="{DynamicResource BorderInOutputStyle}"
                        Visibility="{Binding IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Expander x:Name="TranslatorExpander"
                                  VerticalAlignment="Top"
                                  common:ExpanderHelper.DataResult="{Binding Data.Result, Converter={StaticResource String2IsEnableConverter}}"
                                  common:ExpanderHelper.IsExecuting="{Binding IsExecuting}"
                                  ExpandDirection="Down"
                                  SnapsToDevicePixels="True">
                            <!-- // BindingProxy 传递 ITranslator // -->
                            <Expander.Resources>
                                <common:BindingProxy x:Key="TranslatorService" Data="{Binding .}" />
                            </Expander.Resources>

                            <!-- // 手动触发Expander的Expanded事件 // -->
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Expanded">
                                    <i:InvokeCommandAction
                                        Command="{Binding Source={StaticResource OutputVm}, Path=Data.ExpanderHeaderCommand}">
                                        <i:InvokeCommandAction.CommandParameter>
                                            <MultiBinding Converter="{StaticResource MultiValue2ListConverter}">
                                                <Binding ElementName="TranslatorExpander" />
                                                <Binding Path="." />
                                            </MultiBinding>
                                        </i:InvokeCommandAction.CommandParameter>
                                    </i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Expander.Header>
                                <Grid Height="30" Background="Transparent">
                                    <i:Interaction.Triggers>
                                        <!-- // https://stackoverflow.com/questions/3870214/eventtrigger-with-setter-in-wpf // -->
                                        <i:EventTrigger EventName="MouseEnter">
                                            <i:ChangePropertyAction PropertyName="Visibility" Value="Visible"
                                                                    TargetName="ExtraSettingsTb" />
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="MouseLeave">
                                            <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed"
                                                                    TargetName="ExtraSettingsTb" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <!-- // 左侧服务图标、名称 // -->
                                    <StackPanel Grid.Column="0" VerticalAlignment="Center" Orientation="Horizontal">
                                        <Image Width="18" Margin="10,0,0,0"
                                               Source="{Binding Icon, Converter={StaticResource String2IconConverter}}" />
                                        <TextBlock Margin="10,0,0,0"
                                                   FontSize="{DynamicResource FontSize_Identify}"
                                                   Foreground="{DynamicResource TextForeground}"
                                                   Text="{Binding Name}"
                                                   TextTrimming="CharacterEllipsis" />
                                        <ToggleButton Name="ExpanderPromptTb"
                                                      Height="22"
                                                      Margin="10,0,0,0"
                                                      Padding="4,0"
                                                      Background="Transparent"
                                                      BorderBrush="{DynamicResource ThemeAccentColor}"
                                                      BorderThickness="1"
                                                      Content="{Binding UserDefinePrompts, Converter={StaticResource PromptConverter}}"
                                                      Cursor="Hand"
                                                      FontFamily="{DynamicResource UserFont}"
                                                      FontSize="{DynamicResource FontSize_Identify}"
                                                      Style="{DynamicResource ToggleButtonIconStyle}">
                                            <ToggleButton.Visibility>
                                                <MultiBinding
                                                    Converter="{StaticResource PromptToVisibilityMultiConverter}">
                                                    <Binding Path="UserDefinePrompts" />
                                                    <Binding Source="{StaticResource OutputVm}"
                                                             Path="Data.IsPromptToggleVisible" />
                                                </MultiBinding>
                                            </ToggleButton.Visibility>
                                        </ToggleButton>
                                        <Popup MinWidth="40"
                                               MinHeight="30"
                                               AllowsTransparency="True"
                                               IsOpen="{Binding ElementName=ExpanderPromptTb, Path=IsChecked}"
                                               Placement="Bottom"
                                               PlacementTarget="{Binding ElementName=ExpanderPromptTb}"
                                               PopupAnimation="Slide"
                                               StaysOpen="False">
                                            <Border Style="{DynamicResource BorderStyle}">
                                                <ListBox x:Name="PromptLb"
                                                         Background="Transparent"
                                                         BorderThickness="0"
                                                         ItemsSource="{Binding Source={StaticResource TranslatorService}, Path=Data.UserDefinePrompts}">
                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate DataType="{x:Type model:UserDefinePrompt}">
                                                            <Border x:Name="PromptBorder"
                                                                    Margin="3"
                                                                    HorizontalAlignment="Center"
                                                                    Background="{DynamicResource BorderBackground}"
                                                                    BorderBrush="{x:Null}"
                                                                    CornerRadius="5">
                                                                <Grid Margin="0,5">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="30" />
                                                                        <ColumnDefinition Width="50" />
                                                                    </Grid.ColumnDefinitions>

                                                                    <Label HorizontalAlignment="Left"
                                                                           Content="&#xec9e;"
                                                                           FontFamily="{DynamicResource IconFont}"
                                                                           FontSize="{DynamicResource FontSize_Identify}"
                                                                           FontWeight="Bold"
                                                                           Visibility="{Binding Enabled, Converter={StaticResource BooleanToVisibilityConverter}}" />

                                                                    <TextBlock Grid.Column="1"
                                                                               HorizontalAlignment="Left"
                                                                               FontSize="{DynamicResource FontSize_Identify}"
                                                                               Text="{Binding Name}"
                                                                               TextTrimming="CharacterEllipsis" />
                                                                </Grid>
                                                            </Border>
                                                            <DataTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="PromptBorder"
                                                                            Property="Background"
                                                                            Value="{DynamicResource BtnMouseOverBackground}" />
                                                                </Trigger>
                                                            </DataTemplate.Triggers>
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                            <i:InvokeCommandAction
                                                                Command="{Binding Source={StaticResource OutputVm}, Path=Data.SelectedPromptCommand}">
                                                                <i:InvokeCommandAction.CommandParameter>
                                                                    <MultiBinding
                                                                        Converter="{StaticResource MultiValue2ListConverter}">
                                                                        <Binding Path="Data"
                                                                            Source="{StaticResource TranslatorService}" />
                                                                        <Binding ElementName="PromptLb"
                                                                            Path="SelectedItem" />
                                                                        <Binding ElementName="ExpanderPromptTb" />
                                                                    </MultiBinding>
                                                                </i:InvokeCommandAction.CommandParameter>
                                                            </i:InvokeCommandAction>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </ListBox>
                                            </Border>
                                        </Popup>
                                    </StackPanel>

                                    <!-- // 右侧其他按钮 // -->
                                    <StackPanel Grid.Column="1"
                                                Margin="0,0,30,0"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                FlowDirection="RightToLeft"
                                                Orientation="Horizontal">

                                        <!-- // 重试按钮 // -->
                                        <Button Margin="2,2,0,2"
                                                HorizontalAlignment="Right"
                                                Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.SingleTranslateCommand}"
                                                CommandParameter="{Binding}"
                                                Content="&#xe60f;"
                                                Cursor="Hand"
                                                FontSize="17"
                                                Background="Transparent"
                                                Style="{DynamicResource ButtonIconStyle}"
                                                ToolTip="重试"
                                                Visibility="{Binding Data.IsSuccess, Converter={StaticResource BooleanToVisibilityReverseConverter}}" />

                                        <!-- // 复制按钮到Expander上 Expander收起时显示// -->
                                        <StackPanel x:Name="HeaderCopySP" Orientation="Horizontal">
                                            <StackPanel.Visibility>
                                                <MultiBinding
                                                    Converter="{StaticResource MultiValue2VisibilityConverter}">
                                                    <Binding Path="IsExpanded"
                                                             RelativeSource="{RelativeSource AncestorType=Expander}" />
                                                    <Binding Path="DataContext.CommonSettingVM.ShowCopyOnHeader"
                                                             RelativeSource="{RelativeSource AncestorType=Window}" />
                                                    <Binding Path="Data.IsSuccess" />
                                                </MultiBinding>
                                            </StackPanel.Visibility>
                                            <!-- TTS -->
                                            <Button Margin="2,2,0,2"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.TTSCommand}"
                                                    CommandParameter="{Binding Data.Result}"
                                                    Content="&#xe610;"
                                                    Cursor="Hand"
                                                    Style="{DynamicResource ButtonCopyIconStyle}"
                                                    ToolTip="文字转语音"
                                                    Visibility="{Binding Data.Result, Converter={StaticResource VisibilityConverter}}" />
                                            <!-- 大驼峰复制 -->
                                            <Button Margin="2,2,0,2"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.CopyLargeHumpResultCommand}"
                                                    CommandParameter="{Binding Data.Result}"
                                                    Content="&#xe601;"
                                                    Cursor="Hand"
                                                    Style="{DynamicResource ButtonCopyIconStyle}"
                                                    ToolTip="复制为大驼峰字符串">
                                                <Button.Visibility>
                                                    <MultiBinding
                                                        Converter="{StaticResource StringBoolean2VisibilityConverter}">
                                                        <Binding Path="Data.Result" />
                                                        <Binding Source="{StaticResource OutputVm}"
                                                                 Path="Data.IsShowLargeHumpCopyBtn" />
                                                    </MultiBinding>
                                                </Button.Visibility>
                                            </Button>
                                            <!-- 小驼峰复制 -->
                                            <Button Margin="2,2,0,2"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.CopySmallHumpResultCommand}"
                                                    CommandParameter="{Binding Data.Result}"
                                                    Content="&#xe602;"
                                                    Cursor="Hand"
                                                    Style="{DynamicResource ButtonCopyIconStyle}"
                                                    ToolTip="复制为小驼峰字符串">
                                                <Button.Visibility>
                                                    <MultiBinding
                                                        Converter="{StaticResource StringBoolean2VisibilityConverter}">
                                                        <Binding Path="Data.Result" />
                                                        <Binding Source="{StaticResource OutputVm}"
                                                                 Path="Data.IsShowSmallHumpCopyBtn" />
                                                    </MultiBinding>
                                                </Button.Visibility>
                                            </Button>
                                            <!-- 蛇形复制 -->
                                            <Button Margin="2,2,0,2"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.CopySnakeResultCommand}"
                                                    CommandParameter="{Binding Data.Result}"
                                                    Content="&#xe600;"
                                                    Cursor="Hand"
                                                    Style="{DynamicResource ButtonCopyIconStyle}"
                                                    ToolTip="复制为蛇形字符串">
                                                <Button.Visibility>
                                                    <MultiBinding
                                                        Converter="{StaticResource StringBoolean2VisibilityConverter}">
                                                        <Binding Path="Data.Result" />
                                                        <Binding Source="{StaticResource OutputVm}"
                                                                 Path="Data.IsShowSnakeCopyBtn" />
                                                    </MultiBinding>
                                                </Button.Visibility>
                                            </Button>
                                            <!-- 普通复制 -->
                                            <Button Margin="2,2,0,2"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.CopyResultCommand}"
                                                    CommandParameter="{Binding Data.Result}"
                                                    Content="&#xe692;"
                                                    Cursor="Hand"
                                                    Style="{DynamicResource ButtonCopyIconStyle}"
                                                    ToolTip="直接复制结果"
                                                    Visibility="{Binding Data.Result, Converter={StaticResource VisibilityConverter}}" />
                                        </StackPanel>

                                        <!-- // 更多设置按钮 // -->
                                        <ToggleButton Name="ExtraSettingsTb"
                                                      Background="Transparent"
                                                      Content="&#xe8b7;"
                                                      Cursor="Hand"
                                                      Margin="3,0"
                                                      Height="26"
                                                      Width="26"
                                                      Visibility="Collapsed"
                                                      Style="{DynamicResource ToggleButtonIconStyle}" />
                                        <Popup Name="ExtraSettingsPopup"
                                               MinWidth="40"
                                               MinHeight="30"
                                               AllowsTransparency="True"
                                               IsOpen="{Binding ElementName=ExtraSettingsTb, Path=IsChecked}"
                                               Placement="Bottom"
                                               PlacementTarget="{Binding ElementName=ExtraSettingsTb}"
                                               PopupAnimation="Slide"
                                               StaysOpen="False">
                                            <Border Style="{DynamicResource BorderStyle}">
                                                <StackPanel FlowDirection="LeftToRight">
                                                    <!--// 自动翻译 //-->
                                                    <Border Style="{DynamicResource BorderExtraSettingsStyle}"
                                                            ToolTip="执行翻译时是否自动翻译，否则需要手动点击才能进行翻译，保存至配置文件">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                                                <i:InvokeCommandAction
                                                                    Command="{Binding Source={StaticResource OutputVm}, Path=Data.CanAutoExecuteCommand}">
                                                                    <i:InvokeCommandAction.CommandParameter>
                                                                        <MultiBinding
                                                                            Converter="{StaticResource MultiValue2ListConverter}">
                                                                            <Binding Path="Data"
                                                                                Source="{StaticResource TranslatorService}" />
                                                                            <Binding ElementName="ExtraSettingsTb" />
                                                                        </MultiBinding>
                                                                    </i:InvokeCommandAction.CommandParameter>
                                                                </i:InvokeCommandAction>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                        <Grid Margin="0,5">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="30" />
                                                                <ColumnDefinition Width="80" />
                                                            </Grid.ColumnDefinitions>

                                                            <Label HorizontalAlignment="Left"
                                                                   Content="&#xec9e;"
                                                                   FontFamily="{DynamicResource IconFont}"
                                                                   FontSize="{DynamicResource FontSize_Identify}"
                                                                   FontWeight="Bold"
                                                                   Visibility="{Binding Source={StaticResource TranslatorService}, Path=Data.AutoExecute, Converter={StaticResource BooleanToVisibilityConverter}}" />

                                                            <TextBlock Grid.Column="1"
                                                                       HorizontalAlignment="Left"
                                                                       FontSize="{DynamicResource FontSize_Identify}"
                                                                       Text="自动执行" />
                                                        </Grid>
                                                    </Border>

                                                    <Separator />

                                                    <!--// 关闭服务 //-->
                                                    <Border Style="{DynamicResource BorderExtraSettingsStyle}"
                                                            ToolTip="立即关闭服务并保存至配置文件">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                                                <i:InvokeCommandAction
                                                                    Command="{Binding Source={StaticResource OutputVm}, Path=Data.CloseServiceCommand}">
                                                                    <i:InvokeCommandAction.CommandParameter>
                                                                        <MultiBinding
                                                                            Converter="{StaticResource MultiValue2ListConverter}">
                                                                            <Binding Path="Data"
                                                                                Source="{StaticResource TranslatorService}" />
                                                                            <Binding ElementName="ExtraSettingsTb" />
                                                                        </MultiBinding>
                                                                    </i:InvokeCommandAction.CommandParameter>
                                                                </i:InvokeCommandAction>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                        <Grid Margin="0,5">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="30" />
                                                                <ColumnDefinition Width="80" />
                                                            </Grid.ColumnDefinitions>

                                                            <TextBlock Grid.Column="1"
                                                                       HorizontalAlignment="Left"
                                                                       FontSize="{DynamicResource FontSize_Identify}"
                                                                       Text="关闭服务" />
                                                        </Grid>
                                                    </Border>
                                                </StackPanel>
                                            </Border>
                                        </Popup>
                                    </StackPanel>
                                </Grid>
                            </Expander.Header>
                            <!-- // Expander Header Copy Button Fade In/Out Animation // -->
                            <Expander.Triggers>
                                <EventTrigger RoutedEvent="Expander.Expanded">
                                    <BeginStoryboard Storyboard="{StaticResource FadeOutStoryboard}" />
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Expander.Collapsed">
                                    <BeginStoryboard Storyboard="{StaticResource FadeInStoryboard}" />
                                </EventTrigger>
                            </Expander.Triggers>
                            <Grid>
                                <TextBox PreviewMouseWheel="TextBox_PreviewMouseWheel"
                                         dd:DragDrop.IsDragSource="False"
                                         dd:DragDrop.IsDropTarget="False"
                                         Style="{DynamicResource TextBoxOutputStyle}"
                                         Tag="{Binding Data.IsSuccess}"
                                         Text="{Binding Data.Result}" />
                                <StackPanel Margin="5"
                                            Visibility="{Binding Data.IsSuccess, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            VerticalAlignment="Bottom"
                                            Orientation="Horizontal">
                                    <!-- TTS -->
                                    <Button Margin="5,0,0,0"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.TTSCommand}"
                                            CommandParameter="{Binding Data.Result}"
                                            Content="&#xe610;"
                                            Cursor="Hand"
                                            Style="{DynamicResource ButtonCopyIconStyle}"
                                            ToolTip="文字转语音"
                                            Visibility="{Binding Data.Result, Converter={StaticResource VisibilityConverter}}" />
                                    <!-- 蛇形复制 -->
                                    <Button Margin="5,0,0,0"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.CopySnakeResultCommand}"
                                            CommandParameter="{Binding Data.Result}"
                                            Content="&#xe600;"
                                            Cursor="Hand"
                                            Style="{DynamicResource ButtonCopyIconStyle}"
                                            ToolTip="复制为蛇形字符串">
                                        <Button.Visibility>
                                            <MultiBinding
                                                Converter="{StaticResource StringBoolean2VisibilityConverter}">
                                                <Binding Path="Data.Result" />
                                                <Binding Source="{StaticResource OutputVm}"
                                                         Path="Data.IsShowSnakeCopyBtn" />
                                            </MultiBinding>
                                        </Button.Visibility>
                                    </Button>
                                    <!-- 小驼峰复制 -->
                                    <Button Margin="5,0,0,0"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.CopySmallHumpResultCommand}"
                                            CommandParameter="{Binding Data.Result}"
                                            Content="&#xe602;"
                                            Cursor="Hand"
                                            Style="{DynamicResource ButtonCopyIconStyle}"
                                            ToolTip="复制为小驼峰字符串">
                                        <Button.Visibility>
                                            <MultiBinding
                                                Converter="{StaticResource StringBoolean2VisibilityConverter}">
                                                <Binding Path="Data.Result" />
                                                <Binding Source="{StaticResource OutputVm}"
                                                         Path="Data.IsShowSmallHumpCopyBtn" />
                                            </MultiBinding>
                                        </Button.Visibility>
                                    </Button>
                                    <!-- 大驼峰复制 -->
                                    <Button Margin="5,0,0,0"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.CopyLargeHumpResultCommand}"
                                            CommandParameter="{Binding Data.Result}"
                                            Content="&#xe601;"
                                            Cursor="Hand"
                                            Style="{DynamicResource ButtonCopyIconStyle}"
                                            ToolTip="复制为大驼峰字符串">
                                        <Button.Visibility>
                                            <MultiBinding
                                                Converter="{StaticResource StringBoolean2VisibilityConverter}">
                                                <Binding Path="Data.Result" />
                                                <Binding Source="{StaticResource OutputVm}"
                                                         Path="Data.IsShowLargeHumpCopyBtn" />
                                            </MultiBinding>
                                        </Button.Visibility>
                                    </Button>
                                    <!-- 普通复制 -->
                                    <Button Margin="5,0,0,0"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.CopyResultCommand}"
                                            CommandParameter="{Binding Data.Result}"
                                            Content="&#xe692;"
                                            Cursor="Hand"
                                            Style="{DynamicResource ButtonCopyIconStyle}"
                                            ToolTip="直接复制结果"
                                            Visibility="{Binding Data.Result, Converter={StaticResource VisibilityConverter}}" />

                                    <!-- // 插入文本 // -->
                                    <Button Margin="5,0,0,0"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.InsertResultCommand}"
                                            Content="&#xe677;"
                                            Cursor="Hand"
                                            Style="{DynamicResource ButtonCopyIconStyle}"
                                            ToolTip="插入结果"
                                            Visibility="{Binding Data.Result, Converter={StaticResource VisibilityConverter}}">
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource MultiValue2ListConverter}">
                                                <Binding Path="Data.Result" />
                                                <Binding RelativeSource="{RelativeSource AncestorType=Window}" />
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                    </Button>
                                    
                                    <!-- 回译该结果 -->
                                    <Button Margin="5,0,0,0"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.TranslateBackCommand}"
                                            Content="&#xe687;"
                                            Cursor="Hand"
                                            Style="{DynamicResource ButtonCopyIconStyle}"
                                            ToolTip="回译[强制回译](Ctrl+点击)">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.TranslateBackCommand}"
                                                                       CommandParameter="{Binding Data.Result}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <Button.Visibility>
                                            <MultiBinding
                                                Converter="{StaticResource StringBoolean2VisibilityConverter}">
                                                <Binding Path="Data.Result" />
                                                <Binding Source="{StaticResource OutputVm}"
                                                         Path="Data.IsShowTranslateBackBtn" />
                                            </MultiBinding>
                                        </Button.Visibility>
                                    </Button>
                                </StackPanel>
                                <!-- // 加载动画 // -->
                                <control:LoadingUC IsAnimationPlaying="{Binding IsExecuting}"
                                                   Visibility="{Binding IsExecuting, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>
                        </Expander>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </StackPanel>
</UserControl>